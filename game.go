package main

import (
	"crypto/md5"
	"encoding/json"
	"fmt"
	"log"
	"strconv"
)

var winHashMap = map[string]GameUnit{
	"7b2231223a2243524f5353222c2232223a2243524f5353222c2233223a2243524f5353222c2234223a22454d505459222c2235223a22454d505459222c2236223a22454d505459222c2237223a22454d505459222c2238223a22454d505459222c2239223a22454d505459227dd41d8cd98f00b204e9800998ecf8427e": CROSS,
	"7b2231223a22454d505459222c2232223a22454d505459222c2233223a22454d505459222c2234223a2243524f5353222c2235223a2243524f5353222c2236223a2243524f5353222c2237223a22454d505459222c2238223a22454d505459222c2239223a22454d505459227dd41d8cd98f00b204e9800998ecf8427e": CROSS,
	"7b2231223a22454d505459222c2232223a22454d505459222c2233223a22454d505459222c2234223a22454d505459222c2235223a22454d505459222c2236223a22454d505459222c2237223a2243524f5353222c2238223a2243524f5353222c2239223a2243524f5353227dd41d8cd98f00b204e9800998ecf8427e": CROSS,
	"7b2231223a2243524f5353222c2232223a22454d505459222c2233223a22454d505459222c2234223a2243524f5353222c2235223a22454d505459222c2236223a22454d505459222c2237223a2243524f5353222c2238223a22454d505459222c2239223a22454d505459227dd41d8cd98f00b204e9800998ecf8427e": CROSS,
	"7b2231223a22454d505459222c2232223a2243524f5353222c2233223a22454d505459222c2234223a22454d505459222c2235223a2243524f5353222c2236223a22454d505459222c2237223a22454d505459222c2238223a2243524f5353222c2239223a22454d505459227dd41d8cd98f00b204e9800998ecf8427e": CROSS,
	"7b2231223a22454d505459222c2232223a22454d505459222c2233223a2243524f5353222c2234223a22454d505459222c2235223a22454d505459222c2236223a2243524f5353222c2237223a22454d505459222c2238223a22454d505459222c2239223a2243524f5353227dd41d8cd98f00b204e9800998ecf8427e": CROSS,
	"7b2231223a2243524f5353222c2232223a22454d505459222c2233223a22454d505459222c2234223a22454d505459222c2235223a2243524f5353222c2236223a22454d505459222c2237223a22454d505459222c2238223a22454d505459222c2239223a2243524f5353227dd41d8cd98f00b204e9800998ecf8427e": CROSS,
	"7b2231223a22454d505459222c2232223a22454d505459222c2233223a2243524f5353222c2234223a22454d505459222c2235223a2243524f5353222c2236223a22454d505459222c2237223a2243524f5353222c2238223a22454d505459222c2239223a22454d505459227dd41d8cd98f00b204e9800998ecf8427e": CROSS,
	"7b2231223a225a45524f222c2232223a225a45524f222c2233223a225a45524f222c2234223a22454d505459222c2235223a22454d505459222c2236223a22454d505459222c2237223a22454d505459222c2238223a22454d505459222c2239223a22454d505459227dd41d8cd98f00b204e9800998ecf8427e":       ZERO,
	"7b2231223a22454d505459222c2232223a22454d505459222c2233223a22454d505459222c2234223a225a45524f222c2235223a225a45524f222c2236223a225a45524f222c2237223a22454d505459222c2238223a22454d505459222c2239223a22454d505459227dd41d8cd98f00b204e9800998ecf8427e":       ZERO,
	"7b2231223a22454d505459222c2232223a22454d505459222c2233223a22454d505459222c2234223a22454d505459222c2235223a22454d505459222c2236223a22454d505459222c2237223a225a45524f222c2238223a225a45524f222c2239223a225a45524f227dd41d8cd98f00b204e9800998ecf8427e":       ZERO,
	"7b2231223a225a45524f222c2232223a22454d505459222c2233223a22454d505459222c2234223a225a45524f222c2235223a22454d505459222c2236223a22454d505459222c2237223a225a45524f222c2238223a22454d505459222c2239223a22454d505459227dd41d8cd98f00b204e9800998ecf8427e":       ZERO,
	"7b2231223a22454d505459222c2232223a225a45524f222c2233223a22454d505459222c2234223a22454d505459222c2235223a225a45524f222c2236223a22454d505459222c2237223a22454d505459222c2238223a225a45524f222c2239223a22454d505459227dd41d8cd98f00b204e9800998ecf8427e":       ZERO,
	"7b2231223a22454d505459222c2232223a22454d505459222c2233223a225a45524f222c2234223a22454d505459222c2235223a22454d505459222c2236223a225a45524f222c2237223a22454d505459222c2238223a22454d505459222c2239223a225a45524f227dd41d8cd98f00b204e9800998ecf8427e":       ZERO,
	"7b2231223a225a45524f222c2232223a22454d505459222c2233223a22454d505459222c2234223a22454d505459222c2235223a225a45524f222c2236223a22454d505459222c2237223a22454d505459222c2238223a22454d505459222c2239223a225a45524f227dd41d8cd98f00b204e9800998ecf8427e":       ZERO,
	"7b2231223a22454d505459222c2232223a22454d505459222c2233223a225a45524f222c2234223a22454d505459222c2235223a225a45524f222c2236223a22454d505459222c2237223a225a45524f222c2238223a22454d505459222c2239223a22454d505459227dd41d8cd98f00b204e9800998ecf8427e":       ZERO,
}

type GameUnit string

const (
	EMPTY GameUnit = "EMPTY"
	CROSS GameUnit = "CROSS"
	ZERO  GameUnit = "ZERO"
)

type GameField map[int]GameUnit

type Game struct {
	uuid            string
	users           []*User
	crossUser       *User
	zeroUser        *User
	currentMoveUnit GameUnit
	isOver          bool
	field           GameField
}

func (g *Game) Start() {
	messageGameSearchOff := Message{
		GameSearchOff,
		map[string]string{},
	}
	messageGameStart := Message{
		GameSearchStart,
		map[string]string{
			"gameUUID":      g.uuid,
			"crossUserUUID": g.crossUser.uuid,
			"zeroUserUUID":  g.zeroUser.uuid,
		},
	}
	for _, user := range g.users {
		user.writeChan <- messageGameSearchOff
		user.writeChan <- messageGameStart
		break // dev
	}
	log.Println("Game started", g.uuid)
}

func (g *Game) GetField() map[string]string {
	field := map[string]string{}
	for k, v := range g.field {
		field[strconv.Itoa(k)] = string(v)
	}
	return field
}

func (g *Game) CheckWinner() (GameUnit, bool) {
	md5 := md5.New()
	jsonData, _ := json.Marshal(g.field)
	hash := fmt.Sprintf("%x", md5.Sum(jsonData))
	winner, ok := winHashMap[hash]
	if !ok {
		return EMPTY, false
	}
	return winner, true
}
